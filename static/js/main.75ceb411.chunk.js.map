{"version":3,"sources":["components/Container/Container.module.css","components/Form/Form.module.css","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","resetForm","preventDefault","contact","id","uuidv4","className","s","form","label","input","type","pattern","title","required","onChange","button","protoType","PropTypes","func","ContactList","contacts","deleteContact","list","map","item","tell","onClick","Filter","filter","onChangeFilter","string","Container","children","container","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","state","useEffect","setItem","stringify","Form","data","some","includes","alert","length","toLocaleLowerCase","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.75ceb411.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"button\":\"Form_button__243jh\",\"input\":\"Form_input__2ESfd\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    onSubmit(contact);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.protoType = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => {\n        return (\n          <li key={contact.id} className={s.item}>\n            <span className={s.name}>{contact.name}:</span>\n            <span className={s.tell}>{contact.number}</span>\n            <button\n              className={s.button}\n              type=\"button\"\n              id={contact.id}\n              onClick={() => deleteContact(contact.id)}\n            >\n              remove\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ filter, onChangeFilter }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Введите имя контакта. Поиск не чувствительный к регистру вводимых символов.\"\n        required\n        onChange={onChangeFilter}\n        value={filter}\n      ></input>\n    </label>\n  );\n};\nFilter.protoType = {\n  filter: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Container from 'components/Container';\n\nfunction App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem('contacts' ?? [])),\n  );\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = data => {\n    if (contacts.some(contact => contact.name.includes(data.name))) {\n      return alert(`${data.name} is already in contacts!`);\n    }\n\n    setContacts([...contacts, data]);\n  };\n\n  const deleteContact = id => {\n    setContacts(state => state.filter(contact => contact.id !== id));\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value.toLocaleLowerCase());\n  };\n\n  const onFilter = () => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter),\n    );\n  };\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      {contacts.length !== 0 && (\n        <Filter filter={filter} onChangeFilter={changeFilter} />\n      )}\n      {filter === '' ? (\n        <ContactList contacts={contacts} deleteContact={deleteContact} />\n      ) : (\n        <ContactList contacts={onFilter()} deleteContact={deleteContact} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"name\":\"ContactList_name__2WLgA\",\"tell\":\"ContactList_tell__2eCh7\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}